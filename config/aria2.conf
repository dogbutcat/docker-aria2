## 下载设置 ##
## Download Setting ##
## Setting Reference: https://aria2.github.io/manual/en/html/aria2c.html ##

# 断点续传
# Partial Download
continue=true
# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=10
# 单个任务最大线程数, 添加时可指定, 默认:5
split=200
# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=4M
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=200
# 断开速度过慢的连接
lowest-speed-limit=0
# 整体下载速度限制, 运行时可修改, 默认:0
#max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0
#max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0
max-overall-upload-limit=5M
# 单个任务上传速度限制, 默认:0
max-upload-limit=2M
# 禁用IPv6, 默认:false
#disable-ipv6=true
# 当服务器返回503错误时, aria2会尝试重连
# 尝试重连次数, 0代表无限, 默认:5
max-tries=0
# 重连冷却, 默认:0
retry-wait=10

## 进度保存相关 ##

# 从会话文件中读取下载任务
# 开启该参数后aria2将只接受session中的任务, 这意味着aria2一旦使用conf后将不再接受来自终端的任务, 所以该条只需要在启动rpc时加上就可以了
input-file=/opt/aria2/.aria2/aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=/opt/aria2/.aria2/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
save-session-interval=60
# 强制保存会话, 即使任务已经完成, 默认:false
# 较新的版本开启后会在任务完成后依然保留.aria2文件
force-save=true

## RPC相关设置 ##

# 启用RPC, 默认:false
#enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
event-poll=epoll
# RPC监听端口, 端口被占用时可以修改, 默认:6800
#rpc-listen-port=3344
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
#rpc-secret=<TOKEN>
# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=<USER>
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=<PASSWD>

## BT/PT下载相关 ##

# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
#follow-torrent=true
# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
#listen-port=51413
# 单个种子最大连接数, 默认:55
bt-max-peers=1000
# 期望下载速度，默认:50K
bt-request-peer-speed-limit=50M
# 打开DHT功能, PT需要禁用, 默认:true
#enable-dht=false
# 打开IPv6 DHT功能, PT需要禁用, 默认:true
#enable-dht6=false
# DHT网络监听端口, 默认:6881-6999
#dht-listen-port=6881-6999
# 本地节点查找, PT需要禁用, 默认:false
bt-enable-lpd=true
# 种子交换, PT需要禁用, 默认:true
#enable-peer-exchange=true
# 每个种子限速, 对少种的PT很有用, 默认:50K
#bt-request-peer-speed-limit=50K
# 客户端伪装, PT需要
#peer-id-prefix=-TR2770-
peer-agent=Transmission/2.77
user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36
# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
#seed-ratio=0
# BT校验相关, 默认:true
#bt-hash-check-seed=true
# BT任务完成后删除未选择的文件，将直接从磁盘中删除
bt-remove-unselected-file=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=true
# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
bt-save-metadata=true
# 强制加密, 防迅雷必备
bt-require-crypto=true
bt-force-encryption=true
# BT tracker 服务器列表
#bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.open-internet.nl:6969/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://tracker.opentrackr.org:1337/announce,udp://tracker.internetwarriors.net:1337/announce,http://tracker.opentrackr.org:1337/announce,http://tracker.internetwarriors.net:1337/announce,udp://9.rarbg.to:2710/announce,udp://9.rarbg.me:2710/announce,http://tracker3.itzmx.com:6961/announce,http://tracker1.itzmx.com:8080/announce,udp://exodus.desync.com:6969/announce,udp://explodie.org:6969/announce,http://explodie.org:6969/announce,udp://ipv4.tracker.harry.lu:80/announce,udp://tracker.torrent.eu.org:451/announce,udp://tracker.tiny-vps.com:6969/announce,udp://denis.stalker.upeer.me:6969/announce,http://vps02.net.orel.ru:80/announce,http://re-tracker.uz:80/announce,udp://tracker.filemail.com:6969/announce,udp://open.demonii.si:1337/announce,http://open.acgnxtracker.com:80/announce,udp://tracker.cyberia.is:6969/announce,udp://retracker.netbynet.ru:2710/announce,udp://tracker.uw0.xyz:6969/announce,udp://tracker.trackton.ga:7070/announce,udp://tracker.dyn.im:6969/announce,udp://thetracker.org:80/announce,udp://retracker.lanta-net.ru:2710/announce,udp://bt.xxx-tracker.com:2710/announce,udp://tracker.moeking.me:6969/announce,udp://open.stealth.si:80/announce,udp://bt.oiyo.tk:6969/announce,https://tracker.fastdownload.xyz:443/announce,https://t.quic.ws:443/announce,https://opentracker.xyz:443/announce,http://opentracker.xyz:80/announce,http://open.trackerlist.xyz:80/announce,udp://tracker.nyaa.uk:6969/announce,udp://tracker2.itzmx.com:6961/announce,udp://tracker.port443.xyz:6969/announce,http://tracker2.itzmx.com:6961/announce,http://tracker.port443.xyz:6969/announce,http://torrent.nwps.ws:80/announce,http://t.nyaatracker.com:80/announce,udp://tracker.skynetcloud.tk:6969/announce,udp://tracker.filepit.to:6969/announce,udp://torrentclub.tech:6969/announce,https://tracker.gbitt.info:443/announce,http://tracker.gbitt.info:80/announce,http://torrentclub.tech:6969/announce,wss://tracker.openwebtorrent.com:443/announce,wss://tracker.fastcast.nz:443/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker.tvunderground.org.ru:3218/announce,udp://tracker.novg.net:6969/announce,udp://tracker.iamhansen.xyz:2000/announce,udp://retracker.sevstar.net:2710/announce,udp://retracker.baikal-telecom.net:2710/announce,udp://chihaya.toss.li:9696/announce,http://tracker4.itzmx.com:2710/announce,http://tracker.tvunderground.org.ru:3218/announce,http://tracker.novg.net:6969/announce,http://tracker.bz:80/announce,http://open.acgtracker.com:1096/announce,udp://zephir.monocul.us:6969/announce,udp://tracker.open-tracker.org:1337/announce,udp://tracker.justseed.it:1337/announce,udp://packages.crunchbangplusplus.org:6969/announce,https://tracker.vectahosting.eu:2053/announce,https://1337.abcvg.info:443/announce,http://tracker.torrentyorg.pl:80/announce,http://tracker.openzim.org:80/announce,http://tracker.open-tracker.org:1337/announce,http://t.acg.rip:6699/announce,http://sub4all.org:2710/announce,http://share.camoe.cn:8080/announce,http://retracker.mgts.by:80/announce,http://fxtt.ru:80/announce

## 磁盘相关 ##

#文件保存路径, 默认为当前启动位置
dir=/data
#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)
enable-mmap=true
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: 快none < trunc < falloc < prealloc慢
# falloc仅仅比trunc慢0.06s
# 磁盘碎片: 无falloc = prealloc < trunc = none有
# 推荐优先级: 高falloc --> prealloc --> trunc -->none低
# EXT4, btrfs, xfs, NTFS等新型文件系统建议使用falloc, falloc(fallocate)在这些文件系统上可以瞬间创建完整的空文件
# trunc(ftruncate) 同样是是瞬间创建文件, 但是与falloc的区别是创建出的空文件不占用实际磁盘空间
# prealloc 传统的创建完整的空文件, aria2会一直等待直到分配结束, 也就是说如果是在HHD上下载10G文件，那么你的aria2将会一直等待你的硬盘持续满载工作直到10G文件创建完成后才会开始下载
# none将不会预分配, 磁盘碎片程度受下面的disk-cache影响, trunc too
# 请勿在传统文件系统如:EXT3, FAT32上使用falloc, 它的实际效果将与prealloc相同
# MacOS建议使用prealloc, 因为它不支持falloc, 也不支持trunc, but可以尝试用brew安装truncate以支持trunc(ftruncate)
# 事实上我有些不能理解trunc在aria2中的角色, 它与none几乎没有区别, 也就是说:太鸡肋了
file-allocation=trunc
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
disk-cache=128M

## event ##
on-download-complete=/opt/aria2/scripts/upload.sh
